blueprint:
  name: Heater Control System
  description: Controls heater based on temperature, time periods, and hysteresis.
  domain: automation
  input:
    temp_sensor:
      name: Temperature Sensor
      selector:
        entity:
          domain: sensor
    heater:
      name: Heater Entity
      selector:
        entity:
          domain: climate
    on_peak_time:
      name: On Peak Start Time
      selector:
        entity:
          domain: input_datetime
    off_peak_time:
      name: Off Peak Start Time
      selector:
        entity:
          domain: input_datetime
    on_peak_temp:
      name: On Peak Temp
      selector:
        entity:
          domain: input_number
    off_peak_temp:
      name: Off Peak Temp
      selector:
        entity:
          domain: input_number
    master_toggle:
      name: Master Toggle
      selector:
        entity:
          domain: input_boolean
    precision_factor:
      name: Precision Factor
      selector:
        entity:
          domain: input_number

trigger:
  - platform: state
    entity_id: !input temp_sensor
  - platform: time_pattern
    minutes: "/1"

condition: []

action:
  - variables:
      current_time: "{{ now().strftime('%H:%M:%S') }}"
      on_peak: "{{ state_attr(input.on_peak_time, 'timestamp') | int | timestamp_custom('%H:%M:%S') }}"
      off_peak: "{{ state_attr(input.off_peak_time, 'timestamp') | int | timestamp_custom('%H:%M:%S') }}"
      master: "{{ is_state(input.master_toggle, 'on') }}"
      precision: "{{ states(input.precision_factor) | float }}"
      on_peak_setpoint: "{{ states(input.on_peak_temp) | float }}"
      off_peak_setpoint: "{{ states(input.off_peak_temp) | float }}"
      room_temp: "{{ states(input.temp_sensor) | float }}"
      is_on_peak: >
        {% set on_time = on_peak %}
        {% set off_time = off_peak %}
        {% set now_time = current_time %}
        {{ (on_time <= now_time <= off_time) if on_time < off_time else (now_time >= on_time or now_time <= off_time) }}
      setpoint: "{{ on_peak_setpoint if is_on_peak else off_peak_setpoint }}"
      
  - choose:
      - conditions: "{{ not master }}"
        sequence:
          - service: climate.turn_off
            target:
              entity_id: !input heater
      - conditions:
          - "{{ room_temp < (setpoint - precision) }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input heater
            data:
              hvac_mode: heat
      - conditions:
          - "{{ room_temp > (setpoint + precision) }}"
        sequence:
          - service: climate.turn_off
            target:
              entity_id: !input heater
